---
# Values here are the same across all environments

generic-service:
  nameOverride: hmpps-manage-users
  serviceAccountName: hmpps-manage-users
  productId: DPS017

  image:
    repository: quay.io/hmpps/hmpps-manage-users
    tag: app_version    # override at deployment time
    port: 3000

  ingress:
    enabled: true
    annotations:
      # note this limit is per ingress replica
      nginx.ingress.kubernetes.io/limit-rpm: "120"
      # setting to 429 (default is 503) so we can alert on this
      nginx.ingress.kubernetes.io/server-snippet: |
        add_header X-Robots-Tag "noindex, nofollow";
        limit_req_status 429;
    tlsSecretName: hmpps-manage-users-cert
    modsecurity_enabled: true
    modsecurity_snippet: |
      SecRuleEngine On
      SecDefaultAction "phase:2,pass,log,tag:github_team=haha"
      SecDefaultAction "phase:4,pass,log,tag:github_team=haha"
      {{ if .Values.ingress.modsecurity_audit_enabled -}}
      SecAuditEngine RelevantOnly
      SecAuditLog /var/log/nginx/error.log
      SecAuditLogType Serial
      {{ end -}}
      SecRuleRemoveById 920300
      SecRuleUpdateTargetById 942440 "!REQUEST_COOKIES:/hmpps-session-dev/"
      SecRuleUpdateTargetById 942440 "!REQUEST_COOKIES:/hmpps-session-preprod/"
      SecRuleUpdateTargetById 942440 "!REQUEST_COOKIES:/hmpps-session-prod/"
      SecRuleUpdateTargetById 949110 "!REQUEST_COOKIES:/hmpps-session-dev/"
      SecRuleUpdateTargetById 949110 "!REQUEST_COOKIES:/hmpps-session-preprod/"
      SecRuleUpdateTargetById 949110 "!REQUEST_COOKIES:/hmpps-session-prod/"
      SecRuleUpdateActionById 949110 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 959100 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 950019 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleUpdateTargetById 942100 "!ARGS"  # disable libinjection testing on request args. to disable all SQLi testing, modify rules in the range 942100-942999
      SecRuleUpdateTargetById 942430 "!ARGS:returnTo"
      SecRule ARGS|ARGS_NAMES|REQUEST_BODY|REQUEST_HEADERS "@rx \b(RCPT TO|MAIL FROM|DATA)\b" \
        "id:'950020',\
        phase:2,\
        deny,\
        log,\
        msg:'SMTP command injection attempt detected',\
        tag:'mail-injection',\
        severity:'CRITICAL',\
        t:none,\
        status:406"
      SecAction \
        "id:900000,\
         phase:1,\
         nolog,\
         pass,\
         t:none,\
         setvar:tx.paranoia_level=2"

  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /ping

  env:
    NODE_ENV: production
    REDIS_TLS_ENABLED: "true"
    TOKEN_VERIFICATION_ENABLED: true
    WEB_SESSION_TIMEOUT_IN_MINUTES: "60"
    NOMIS_USERS_API_ENDPOINT_TIMEOUT_SECONDS: "120"
    AUDIT_SQS_REGION: "eu-west-2"
    AUDIT_SERVICE_NAME: "hmpps-manage-users"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]
  namespace_secrets:
    hmpps-manage-users:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      API_CLIENT_ID: "API_CLIENT_ID"
      API_CLIENT_SECRET: "API_CLIENT_SECRET"
      GOOGLE_TAG_MANAGER_ID: "GOOGLE_TAG_MANAGER_ID"
      SESSION_SECRET: "SESSION_SECRET"
    sqs-hmpps-audit-secret:
      AUDIT_SQS_QUEUE_URL: "sqs_queue_url"
      AUDIT_SQS_QUEUE_NAME: "sqs_queue_name"
    hmpps-redis:
      REDIS_HOST: "REDIS_HOST"
      REDIS_PASSWORD: "REDIS_PASSWORD"

generic-prometheus-alerts:
  targetApplication: hmpps-manage-users
