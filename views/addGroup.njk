{% extends "./partials/layout.njk" %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}

{% block header %}
  {{ super() }}
  <link href="/assets/accessible-autocomplete.min.css" rel="stylesheet" />
{% endblock %}

{% set title =  "Select group" %}

{% block content %}
  {% if errors.length > 0 %}
    {{ govukErrorSummary({
      titleText: "There is a problem",
      errorList: errors,
      attributes: { 'data-qa-errors': true }
    }) }}
  {% endif %}
  <div class="govuk-grid-row">
    <h1 class="govuk-heading-l">{{ title }}</h1>

    <div class="govuk-grid-row">
      <div class="govuk-grid-column-two-thirds">
        {% if groupDropdownValues.length == 0 %}
          <p class="govuk-body" data-qa="no-groups">
            There are no groups available for you to assign.
          </p>
        {% endif %}
        <form method="POST">
          <div class="govuk-list">
            {{ govukSelect({
              idPrefix: 'group',
              name: 'group',
              id: 'group',
              items: groupDropdownValues | addBlankOptions('Select a group'),
              errorMessage: errors | findError('group')
            }) }}
          </div>

          {{ govukButton({
            text: "Confirm",
            type: "submit",
            classes: "govuk-!-margin-right-1",
            attributes: { "data-qa": "add-button" }
          }) }}

          {{ govukButton({
            text: "Cancel",
            element: 'a',
            href: staffUrl,
            classes: "govuk-button--secondary",
            attributes: { "data-qa": "cancel-link" }
          }) }}
        </form>
      </div>
    </div>
  </div>
{% endblock %}

{% block bodyEnd %}
  {{ super() }}
  <script src="/assets/accessible-autocomplete.min.js"></script>
  <script>
    accessibleAutocomplete.enhanceSelectElement({
      selectElement: document.querySelector('#group'),
      showAllValues: true,
      preserveNullOptions: true,
    })
  </script>
{% endblock %}
